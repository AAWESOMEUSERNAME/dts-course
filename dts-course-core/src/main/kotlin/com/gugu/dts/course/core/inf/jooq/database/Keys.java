/*
 * This file is generated by jOOQ.
 */
package com.gugu.dts.course.core.inf.jooq.database;


import com.gugu.dts.course.core.inf.jooq.database.tables.Course;
import com.gugu.dts.course.core.inf.jooq.database.tables.records.CourseRecord;

import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>dts</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CourseRecord, Long> IDENTITY_COURSE = Identities0.IDENTITY_COURSE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CourseRecord> KEY_COURSE_PRIMARY = UniqueKeys0.KEY_COURSE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CourseRecord, Long> IDENTITY_COURSE = Internal.createIdentity(Course.COURSE, Course.COURSE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CourseRecord> KEY_COURSE_PRIMARY = Internal.createUniqueKey(Course.COURSE, "KEY_course_PRIMARY", new TableField[] { Course.COURSE.ID }, true);
    }
}
